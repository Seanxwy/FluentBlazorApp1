@using FluentBlazorApp1.Client.Layout
@using Microsoft.FluentUI.AspNetCore.Components.DesignTokens
@inherits LayoutComponentBase
@inject FillColor FillColor
@inject BaseLayerLuminance BaseLayerLuminance
@inject BodyFont BodyFont
@inject TypeRampBaseFontSize TypeRampBaseFontSize
@inject Direction Direction
@inject AccentBaseColor AccentBaseColor

<FluentLayout>
    <FluentHeader>
        BlazorApp1
    </FluentHeader>
    <FluentStack Class="main" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu />
        <FluentBodyContent Class="body-content">
            <div class="content">
                @Body
            </div>
        </FluentBodyContent>
    </FluentStack>
    <FluentFooter>
        <div class="link1">
            <a href="https://www.fluentui-blazor.net" target="_blank">Documentation and demos</a>
        </div>
        <div class="link2">
            <a href="https://learn.microsoft.com/en-us/aspnet/core/blazor" target="_blank">About Blazor</a>
        </div>
    </FluentFooter>
</FluentLayout>

<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await AccentBaseColor.WithDefault("#000000".ToSwatch());
            await FillColor.WithDefault("#000000".ToSwatch());
            await BaseLayerLuminance.WithDefault((float)0.2);
            await TypeRampBaseFontSize.WithDefault("20");
            await BodyFont.WithDefault("Sitka Display");
            await Direction.WithDefault("RTL");
            StateHasChanged();
        }
    }
}